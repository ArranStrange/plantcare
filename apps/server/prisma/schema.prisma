// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  plants    Plant[]
  rooms     Room[]
  events    CareEvent[]

  @@map("users")
}

model Room {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  plants    Plant[]

  @@map("rooms")
}

model Plant {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  species         String
  photoUrl        String?
  waterFrequency  Int       // days
  lastWatered     DateTime?
  nextWaterDate   DateTime?
  careNotes       String?
  userId          String    @db.ObjectId
  roomId          String?   @db.ObjectId
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  room            Room?     @relation(fields: [roomId], references: [id], onDelete: SetNull)
  events          CareEvent[]

  @@map("plants")
}

model CareEvent {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  plantId   String   @db.ObjectId
  userId    String   @db.ObjectId
  type      String   // watering | fertilising | repotting
  date      DateTime
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  plant     Plant    @relation(fields: [plantId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("care_events")
}